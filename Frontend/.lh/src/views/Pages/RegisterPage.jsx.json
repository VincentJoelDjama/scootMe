{
    "sourceFile": "src/views/Pages/RegisterPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1652378408971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1652378414959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n     let registerRequest;\r\n     try {\r\n       registerRequest = await axios.post(\r\n-        `http://${REACT_APP_SERVER_URL}/`,\r\n+        `http://${REACT_APP_SERVER_URL}/api/user`,\r\n         {\r\n           ...formValues\r\n         }\r\n       );\r\n"
                },
                {
                    "date": 1652378535959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n     let registerRequest;\r\n     try {\r\n       registerRequest = await axios.post(\r\n-        `http://${REACT_APP_SERVER_URL}/api/user`,\r\n+        `http://${REACT_APP_SERVER_URL}/api/user/register`,\r\n         {\r\n           ...formValues\r\n         }\r\n       );\r\n"
                },
                {
                    "date": 1652378557210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     e.preventDefault();\r\n \r\n     const { history } = this.props;\r\n \r\n-    const fields = [\"name\", \"username\", \"password\"];\r\n+    const fields = [\"\", \"username\", \"password\"];\r\n     const formElements = e.target.elements;\r\n \r\n     const formValues = fields\r\n       .map(field => ({\r\n"
                },
                {
                    "date": 1652378563209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     e.preventDefault();\r\n \r\n     const { history } = this.props;\r\n \r\n-    const fields = [\"\", \"username\", \"password\"];\r\n+    const fields = [\"firstname\", \"username\", \"password\"];\r\n     const formElements = e.target.elements;\r\n \r\n     const formValues = fields\r\n       .map(field => ({\r\n"
                },
                {
                    "date": 1652378589035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     e.preventDefault();\r\n \r\n     const { history } = this.props;\r\n \r\n-    const fields = [\"firstname\", \"username\", \"password\"];\r\n+    const fields = [\"firstname\", \"last\", \"password\"];\r\n     const formElements = e.target.elements;\r\n \r\n     const formValues = fields\r\n       .map(field => ({\r\n"
                },
                {
                    "date": 1652378604804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     e.preventDefault();\r\n \r\n     const { history } = this.props;\r\n \r\n-    const fields = [\"firstname\", \"lastname\", \"\"];\r\n+    const fields = [\"firstname\", \"lastname\", \"e\"];\r\n     const formElements = e.target.elements;\r\n \r\n     const formValues = fields\r\n       .map(field => ({\r\n"
                },
                {
                    "date": 1652378655493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     e.preventDefault();\r\n \r\n     const { history } = this.props;\r\n \r\n-    const fields = [\"firstname\", \"lastname\", \"email\", \"password\", \"mobile\", \"\"];\r\n+    const fields = [\"firstname\", \"lastname\", \"email\", \"password\", \"mobile\", \"a\"];\r\n     const formElements = e.target.elements;\r\n \r\n     const formValues = fields\r\n       .map(field => ({\r\n"
                }
            ],
            "date": 1652378408971,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n// @material-ui/icons\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Face from \"@material-ui/icons/Face\";\r\n\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\r\nimport GridItem from \"components/Grid/GridItem.jsx\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\r\nimport Button from \"components/CustomButtons/Button.jsx\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport CardBody from \"components/Card/CardBody.jsx\";\r\nimport CardHeader from \"components/Card/CardHeader.jsx\";\r\nimport CardFooter from \"components/Card/CardFooter.jsx\";\r\n\r\nimport registerPageStyle from \"assets/jss/material-dashboard-react/views/registerPageStyle.jsx\";\r\n\r\nconst { REACT_APP_SERVER_URL } = process.env;\r\n\r\nclass RegisterPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: [],\r\n      errors: {}\r\n    };\r\n  }\r\n  register = async e => {\r\n    e.preventDefault();\r\n\r\n    const { history } = this.props;\r\n\r\n    const fields = [\"name\", \"username\", \"password\"];\r\n    const formElements = e.target.elements;\r\n\r\n    const formValues = fields\r\n      .map(field => ({\r\n        [field]: formElements.namedItem(field).value\r\n      }))\r\n      .reduce((current, next) => ({ ...current, ...next }));\r\n\r\n    let registerRequest;\r\n    try {\r\n      registerRequest = await axios.post(\r\n        `http://${REACT_APP_SERVER_URL}/`,\r\n        {\r\n          ...formValues\r\n        }\r\n      );\r\n    } catch ({ response }) {\r\n      registerRequest = response;\r\n    }\r\n    const { data: registerRequestData } = registerRequest;\r\n    if (registerRequestData.success) {\r\n      return history.push(\"/login\");\r\n    }\r\n\r\n    this.setState({\r\n      errors:\r\n        registerRequestData.messages && registerRequestData.messages.errors\r\n    });\r\n  };\r\n  handleToggle = value => {\r\n    const { checked } = this.state;\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className={classes.container}>\r\n        <GridContainer justify=\"center\">\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <form onSubmit={this.register}>\r\n              <Card className={classes[this.state.cardAnimaton]}>\r\n                <CardHeader\r\n                  className={`${classes.cardHeader} ${classes.textCenter}`}\r\n                  color=\"primary\"\r\n                >\r\n                  <h4 className={classes.cardTitle}>Register</h4>\r\n                  <div className={classes.socialLine}>\r\n                    {[\r\n                      \"fa fa-facebook-square\",\r\n                      \"fa fa-twitter\",\r\n                      \"fa fa-google-plus\"\r\n                    ].map((prop, key) => {\r\n                      return (\r\n                        <Button\r\n                          color=\"transparent\"\r\n                          justIcon\r\n                          key={key}\r\n                          className={classes.customButtonClass}\r\n                        >\r\n                          <i className={prop} />\r\n                        </Button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <p className={classes.cardDescription}>Or Be Classical</p>\r\n                  <CustomInput\r\n                    labelText=\"Name...\"\r\n                    id=\"name\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.formControlClassName\r\n                    }}\r\n                    inputProps={{\r\n                      required: true,\r\n                      name: \"name\",\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <Face className={classes.inputAdornmentIcon} />\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                  />\r\n                  <CustomInput\r\n                    labelText=\"Email...\"\r\n                    id=\"email\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.formControlClassName\r\n                    }}\r\n                    error={errors.username}\r\n                    inputProps={{\r\n                      required: true,\r\n                      type: \"email\",\r\n                      name: \"username\",\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <Email className={classes.inputAdornmentIcon} />\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                  />\r\n                  <CustomInput\r\n                    labelText=\"Password...\"\r\n                    id=\"password\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                      className: classes.formControlClassName\r\n                    }}\r\n                    error={errors.password}\r\n                    inputProps={{\r\n                      required: true,\r\n                      name: \"password\",\r\n                      type: \"password\",\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <Icon className={classes.inputAdornmentIcon}>\r\n                            lock_outline\r\n                          </Icon>\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                  />\r\n                  <FormControlLabel\r\n                    classes={{\r\n                      root:\r\n                        classes.checkboxLabelControl +\r\n                        \" \" +\r\n                        classes.checkboxLabelControlClassName,\r\n                      label: classes.checkboxLabel\r\n                    }}\r\n                    control={\r\n                      <Checkbox\r\n                        tabIndex={-1}\r\n                        onClick={() => this.handleToggle(1)}\r\n                        checkedIcon={<Check className={classes.checkedIcon} />}\r\n                        icon={<Check className={classes.uncheckedIcon} />}\r\n                        required\r\n                        classes={{\r\n                          checked: classes.checked,\r\n                          root: classes.checkRoot\r\n                        }}\r\n                      />\r\n                    }\r\n                    label={\r\n                      <span>\r\n                        I agree with the <a href=\"#pablo\">Privacy Policy</a>.\r\n                      </span>\r\n                    }\r\n                  />\r\n                </CardBody>\r\n                <CardFooter className={classes.justifyContentCenter}>\r\n                  <Button type=\"submit\" color=\"primary\" simple size=\"lg\" block>\r\n                    Let's Go\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </form>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegisterPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withStyles(registerPageStyle)(RegisterPage);\r\n"
        }
    ]
}