{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ajaxGet = require('./ajaxGet');\n\nvar _ajaxGet2 = _interopRequireDefault(_ajaxGet);\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar typeToLabel = {\n  stargazers: 'Star',\n  watchers: 'Watch',\n  forks: 'Fork'\n};\nvar typeToPath = {\n  forks: 'network'\n};\n\nvar GitHubButton = function (_React$Component) {\n  _inherits(GitHubButton, _React$Component);\n\n  function GitHubButton() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GitHubButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      count: null\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  GitHubButton.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.xhr = (0, _ajaxGet2[\"default\"])(this.getRequestUrl(), function (response) {\n      _this2.setCount(response);\n    });\n  };\n\n  GitHubButton.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.xhr) {\n      this.xhr.abort();\n    }\n  };\n\n  GitHubButton.prototype.setCount = function setCount(data) {\n    if (!data) return;\n    var count = data[this.props.type + '_count'];\n    this.setState({\n      count: count\n    });\n  };\n\n  GitHubButton.prototype.getRequestUrl = function getRequestUrl() {\n    var _props = this.props,\n        namespace = _props.namespace,\n        repo = _props.repo;\n    return '//api.github.com/repos/' + namespace + '/' + repo;\n  };\n\n  GitHubButton.prototype.getRepoUrl = function getRepoUrl() {\n    var _props2 = this.props,\n        namespace = _props2.namespace,\n        repo = _props2.repo;\n    return '//github.com/' + namespace + '/' + repo + '/';\n  };\n\n  GitHubButton.prototype.getCountUrl = function getCountUrl() {\n    var _props3 = this.props,\n        namespace = _props3.namespace,\n        repo = _props3.repo,\n        type = _props3.type;\n    return '//github.com/' + namespace + '/' + repo + '/' + (typeToPath[type] || type) + '/';\n  };\n\n  GitHubButton.prototype.getCountStyle = function getCountStyle() {\n    var count = this.state.count;\n\n    if (count !== null) {\n      return {\n        display: 'block'\n      };\n    }\n\n    return null;\n  };\n\n  GitHubButton.prototype.render = function render() {\n    var _props4 = this.props,\n        className = _props4.className,\n        type = _props4.type,\n        size = _props4.size,\n        rest = _objectWithoutProperties(_props4, ['className', 'type', 'size']);\n\n    delete rest.namespace;\n    delete rest.repo;\n    var count = this.state.count;\n    var buttonClassName = utils.classNames(_defineProperty({\n      'github-btn': true,\n      'github-btn-large': size === 'large'\n    }, className, className));\n    return _react2[\"default\"].createElement('span', _extends({}, rest, {\n      className: buttonClassName\n    }), _react2[\"default\"].createElement('a', {\n      className: 'gh-btn',\n      href: this.getRepoUrl(),\n      target: '_blank'\n    }, _react2[\"default\"].createElement('span', {\n      className: 'gh-ico',\n      'aria-hidden': 'true'\n    }), _react2[\"default\"].createElement('span', {\n      className: 'gh-text'\n    }, typeToLabel[type])), _react2[\"default\"].createElement('a', {\n      className: 'gh-count',\n      target: '_blank',\n      href: this.getCountUrl(),\n      style: this.getCountStyle()\n    }, count));\n  };\n\n  return GitHubButton;\n}(_react2[\"default\"].Component);\n\nGitHubButton.displayName = 'GitHubButton';\nGitHubButton.propTypes = {\n  className: _propTypes2[\"default\"].string,\n  type: _propTypes2[\"default\"].oneOf(['stargazers', 'watchers', 'forks']).isRequired,\n  namespace: _propTypes2[\"default\"].string.isRequired,\n  repo: _propTypes2[\"default\"].string.isRequired,\n  size: _propTypes2[\"default\"].oneOf(['large'])\n};\nexports[\"default\"] = GitHubButton;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}